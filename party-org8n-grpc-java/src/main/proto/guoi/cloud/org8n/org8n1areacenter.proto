syntax = "proto3";
package guoi.cloud.org8n;


option java_multiple_files = true;
option java_package = "com.github.conanchen.guoi.cloud.org8n";
option java_outer_classname = "AreacenterApiProto";

import "google/protobuf/any.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";
import "google/rpc/status.proto";

service AreacenterApi {
    // Returns a list of all areacenters in the org8n.
    rpc ListAreacenters (google.protobuf.Empty) returns (ListAreacentersResponse) {
        //    option (google.api.http) = {
        //      get: "/v1/{parent=topcenter/*}/areacenters"
        //    };
    }
    // Creates a new areacenter in the bookstore.
    rpc CreateAreacenter (CreateAreacenterRequest) returns (Areacenter) {
        //    option (google.api.http) = {
        //      post: "/v1/{parent=topcenter/*}/areacenters"
        //      body: "areacenter"
        //    };
    }
    
    // Deletes a areacenter, including all books that are stored on the areacenter.
    rpc DeleteAreacenter (DeleteAreacenterRequest) returns (google.protobuf.Empty) {
        //  // Delete maps to HTTP DELETE. Resource name maps to the URL path.
        //  // There is no request body.
        //  option (google.api.http) = {
        //    // Note the URL template variable capturing the multi-segment name of the
        //    // areacenter resource to be deleted, such as "topcenter/*/areacenters/areacenter001"
        //    delete: "/v1/{name=topcenter/*/areacenters/*}"
        //  };
    }

    // Returns a specific bookstore areacenter.
    rpc GetAreacenter (GetAreacenterRequest) returns (Areacenter) {
        //    option (google.api.http) = {
        //      get: "/v1/{name=topcenter/*/areacenters/*}"
        //    };
    }

    // Updates a areacenter.
    rpc UpdateAreacenter (UpdateAreacenterRequest) returns (Areacenter) {
        //        // Update maps to HTTP PATCH. Resource name is mapped to a URL path.
        //        // Resource is contained in the HTTP request body.
        //  option (google.api.http) = {
        //    // Note the URL template variable which captures the resource name of the
        //    // areacenter to update.
        //    patch: "/v1/{areacenter.name=topcenter/*/areacenters/*}"
        //    body: "areacenter"
        //  };
    }

}


// A areacenter resource.
message Areacenter {
    // A unique areacenter id.
    int64 id = 1;
    // A theme of the areacenter (fiction, poetry, etc).
    string theme = 2;
}
 
// Response to ListAreacenters call.
message ListAreacentersResponse {
    // *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
    // specifies the error for the operation.
    google.rpc.Status error = 999;

    // Areacenters in the bookstore.
    repeated Areacenter areacenters = 1;
}

// Request message for CreateAreacenter method.
message CreateAreacenterRequest {
    // The areacenter resource to create.
    Areacenter areacenter = 1;
}

// Request message for GetAreacenter method.
message GetAreacenterRequest {
    // The ID of the areacenter resource to retrieve.
    int64 areacenter = 1;
}

// Request message for DeleteAreacenter method.
message DeleteAreacenterRequest {
    // The ID of the areacenter to delete.
    int64 areacenter = 1;
}



message UpdateAreacenterRequest {
    // The areacenter resource which replaces the resource on the server.
    Areacenter areacenter = 1;

    // The update mask applies to the resource. For the `FieldMask` definition,
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;
}

