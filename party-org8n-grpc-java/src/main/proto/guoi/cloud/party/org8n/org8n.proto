syntax = "proto3";
package guoi.cloud.party.org8n;


option java_multiple_files = true;
option java_package = "com.github.conanchen.guoi.cloud.org8n";
option java_outer_classname = "Org8nApiProto";

import "guoi/cloud/common/common.proto";
import "google/protobuf/empty.proto";
import "google/rpc/status.proto";
import "google/protobuf/timestamp.proto";

service Org8nApi {

    // 全网只存在唯一一个全局的顶级Org8n，设计模式见：[Singleton%20Resources](https://cloud.google.com/apis/design/design_patterns#Singleton%20Resources)
    rpc GetToplevelOrg8n(GetToplevelOrg8nRequest) returns (Org8n) {
        //    option (google.api.http) = {
        //        get: "/v1/{name=catalogs/*}"
        //    };
    }

    rpc CreateOrg8n(CreateOrg8nRequest) returns (Org8n){

    }


    rpc GetOrg8n (GetOrg8nRequest) returns (Org8n) {

    }

    rpc UpdateOrg8n(UpdateOrg8nRequest) returns (Org8n){

    }

    rpc DeleteOrg8n(DeleteOrg8nRequest) returns (google.protobuf.Empty){

    }

    rpc ListOrg8ns(ListOrg8nsRequest) returns (ListOrg8nsResponse){

    }

    rpc ListOrg8nsByServiceRange(ListOrg8nsByServiceRangeRequest) returns (ListOrg8nsByServiceRangeResponse){

    }

    rpc CreateEmployee(CreateEmployeeRequest) returns (Employee){

    }

    rpc GetEmployee(GetEmployeeRequest) returns (Employee){

    }

    rpc GetEmployeeByUserId(GetEmployeeRequest) returns(Employee){

    }

    rpc UpdateEmployee(UpdateEmployeeRequest) returns (Employee){

    }
    rpc DeleteEmployee(DeleteEmployeeRequest) returns (google.protobuf.Empty){

    }
    rpc ListEmployees(ListEmployeesRequest) returns (ListEmployeesResponse){

    }

    rpc Updateorg8nstatus(Updateorg8nstatusRequest) returns (Org8n){

    }
}

message GetToplevelOrg8nRequest{

}

enum UserType{
    ADMIN=0;
    USER=1;
}

message Employee{
    string id = 1;
    string name = 2;
    string idNo = 3;
    string phone = 4;
    guoi.cloud.common.Address address = 5;
    string role = 6;
    repeated string right = 7;
    string memo = 8;
    string picpath = 9;
    string group = 10;
    Org8n org8N = 11;
    UserType usertype = 12;
    string serialno = 13;
    int32 status = 14;
    string userid = 15;
    string email = 16;
    google.protobuf.Timestamp createtime = 17;
}

message Org8n{
    string id = 1;
    enum Org8nType{
        TOPCENTER = 0;
        AREACENTER = 1;
        OPCENTER = 2;
        STATION = 3;
        SHOP = 4;
    }
    Org8n parent = 2;
    Org8nType type = 3;
    string name = 4;
    string theme = 5;
    string tel = 6;
    string linkMan = 7;
    string phone = 8;
    int32 status= 9;
    repeated guoi.cloud.common.Address serviceRange = 10;
    guoi.cloud.common.Address address = 11;
    enum OpType{
        SELF = 0;
        THIRD = 1;
    }
    OpType opType = 12;
    string hotPhone = 13;
    string logo = 14;
    string serialno = 15;
    string memo = 16;
    string email = 17;
    repeated string shopid = 18;
    string sosPhone = 19;
}

message CreateOrg8nRequest{

    // The org8n will be created under the parent org8n identified by name_parent
    string id_parent = 1;

    // The catalog resource to create. the org8n.name will be ignored.
    // The field name should match the Noun in the method name.
    Org8n org8n = 2;
}

message GetOrg8nRequest{
    string id = 1;
}

message UpdateOrg8nRequest{
    string id_parent = 1;
    Org8n org8n = 2;
}

message DeleteOrg8nRequest{
    string id = 1;
}

message ListOrg8nsRequest{
    // list sub-org8ns belong to the org8n identified by field "name_parent" resource name
    string id_parent = 1;

    // The maximum number of items to return.
    int32 page_size = 2;

    // The next_page_token value returned from a previous List request, if any.
    string page_token = 3;
}

message ListOrg8nsResponse{
    google.rpc.Status status = 999;

    // The field name should match the noun "org8ns" in the method name.  There
    // will be a maximum number of items returned based on the page_size field
    // in the request.
    repeated Org8n org8ns = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list.
    string next_page_token = 2;

}


message ListOrg8nsByServiceRangeRequest{
    // list sub-org8ns belong to the org8n identified by field "name_parent" resource name
    guoi.cloud.common.Address address = 1;
}

message ListOrg8nsByServiceRangeResponse{
    google.rpc.Status status = 999;

    // The field name should match the noun "org8ns" in the method name.
    repeated Org8n org8ns = 1;
}

message CreateEmployeeRequest{

    // The employee will be created for the org8n identified by name_org8n
    string id_org8n = 1;

    // The catalog resource to create. the employee.name will be ignored.
    // The field name should match the Noun in the method name.
    Employee employee = 2;
}

message GetEmployeeRequest{
    string id = 1;
    string userid = 2;
}

message GetUserRequest{
    string id = 1;
    string employeeid = 3;
}

message UpdateEmployeeRequest{
    Employee employee = 1;
}

message DeleteEmployeeRequest{
    string id = 1;
}

message ListEmployeesRequest{
    // list employees belong to the org8n identified by field "name_org8n" resource name
    string id_org8n = 1;

    // The maximum number of items to return.
    int32 page_size = 2;

    // The next_page_token value returned from a previous List request, if any.
    string page_token = 3;
}

message ListEmployeesResponse{
    google.rpc.Status status = 999;

    // The field name should match the noun "employees" in the method name.  There
    // will be a maximum number of items returned based on the page_size field
    // in the request.
    repeated Employee employees = 1;

    // Token to retrieve the next page of results, or empty if there are no
    // more results in the list.
    string next_page_token = 2;

}

message Updateorg8nstatusRequest{
    string id = 1;
    int32 status = 2;
}