syntax = "proto3";
package guoi.cloud.shopie.product;


option java_multiple_files = true;
option java_package = "com.github.conanchen.guoi.cloud.shopie.product.grpc";
option java_outer_classname = "ProductApiProto";

import "guoi/cloud/common/common.proto";
import "google/rpc/status.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// The product service definition.
service ProductApi {

    // Create product
    rpc CreateProduct (CreateProductRequest) returns (Product) {

    }

    // Deletes a product.
    rpc DeleteProduct (DeleteProductRequest) returns (google.protobuf.Empty) {

    }


    // Gets a product.
    rpc GetProduct (GetProductRequest) returns (Product) {

    }

    // Update product
    rpc UpdateProduct (UpdateProductRequest) returns (Product) {

    }

    rpc ListProducts (ListProductsRequest) returns (ListProductsResponse) {

    }

    rpc ActivateProduct (ActivateProductRequest) returns (ActivateProductResponse) {

    }

    rpc DeactiveProduct (DeactivateProductRequest) returns (DeactivateProductResponse) {

    }
}

message UpdateProductRequest {
    Product product = 2;
}

message Catalog {
    string name = 2;
    string title = 3;
}

message ActivateProductRequest {
    string name = 1;
    string note = 2;
}

message ActivateProductResponse {
    google.rpc.Status status = 999;
    Product product = 2;
}

message DeactivateProductRequest {
    string name = 1;
    string note = 2;
}
message DeactivateProductResponse {
    google.rpc.Status status = 999;
    Product product = 2;
}
enum ProductType {
    //自营
    OWN = 0;
    //第三方
    THIRD_PARTY = 1;
}

enum ServiceMethod {
    // 站内
    OUTTER = 0;
    // 站外
    INNER = 1;
}

message CreateProductRequest {
    // 店铺名称
    string title = 1;

    //分类
    Catalog catalog = 2;

    //产品性质 服务/商品
    ProductType productType = 7;

    //服务方式 站内/外
    ServiceMethod serviceMethod = 8;

    // 状态 上/下架
    bool isActivated = 14;

    // 规格
    repeated Variant variants = 15;

    //描述信息
    string description = 16;

    //品牌
    string brand = 17;

    //供应商
    string vendor = 18;

    repeated string tags = 19;

    // 新建
    google.protobuf.Timestamp create_time = 98;
}

message Variant{
    //服务时长
    int32 period = 1;

    // 单位
    string weightUnit = 9;

    // 原价
    float price = 10;

    // vip 价格
    float vipPrice = 11;

    // 重量
    float weight = 12;

    // 描述
    string description = 13;
}


message DeleteProductRequest {
    string name = 1;
}

message GetProductRequest {
    string name = 1;
}

message Product {
    // id
    string name = 999;
    // 店铺名称
    string title = 1;

    //分类
    Catalog catalog = 2;

    //产品性质 服务/商品
    ProductType productType = 7;

    //服务方式 站内/外
    ServiceMethod serviceMethod = 8;

    // 状态 上/下架
    bool isActivated = 14;

    // 规格
    repeated Variant variants = 15;

    //描述信息
    string description = 16;

    //品牌
    string brand = 17;

    //供应商
    string vendor = 18;

    repeated string tags = 19;
}
message ListProductsRequest {
    // The parent catalog resource name, for example, "catalogs/catalog1".
    string name_parent = 1;

    // The maximum number of items to return.
    int32 page_size = 2;

    // The next_page_token value returned from a previous List request, if any.
    string page_token = 3;
}

// The response message containing the catalogs
message ListProductsResponse {
    google.rpc.Status status = 999;

    repeated Product products = 1;

    string next_page_token = 2;
}