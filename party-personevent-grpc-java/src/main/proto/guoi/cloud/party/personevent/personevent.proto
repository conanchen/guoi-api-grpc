syntax = "proto3";
package guoi.cloud.party.personevent;


option java_multiple_files = true;
option java_package = "com.github.conanchen.guoi.cloud.personevent.grpc";
option java_outer_classname = "PersoneventApiProto";

import "google/protobuf/any.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/rpc/status.proto";

// The greeter service definition.
service PersoneventApi {
    //查询person日程信息
    rpc ListPersonevents (ListPersoneventRequest) returns (ListPersoneventsResponse) {
        //    option (google.api.http) = {
        //      get: "/v1/{parent=persons/*}/events"
        //    };
    }
    // Creates a new event in the bookstore.
    rpc CreatePersonevent (CreatePersoneventRequest) returns (Personevent) {
        //    option (google.api.http) = {
        //      post: "/v1/{parent=persons/*}/events"
        //      body: "event"
        //    };
    }

    // Deletes a event, including all books that are stored on the event.
    rpc DeletePersonevent (DeletePersoneventRequest) returns (google.protobuf.Empty) {
        //  // Delete maps to HTTP DELETE. Resource name maps to the URL path.
        //  // There is no request body.
        //  option (google.api.http) = {
        //    // Note the URL template variable capturing the multi-segment name of the
        //    // event resource to be deleted, such as "person/*/events/event001"
        //    delete: "/v1/{name=persons/*/events/*}"
        //  };
    }

    // Returns a specific bookstore event.
    rpc GetPersonevent (GetPersoneventRequest) returns (Personevent) {
        //    option (google.api.http) = {
        //      get: "/v1/{name=persons/*/events/*}"
        //    };
    }
}
message ListPersoneventRequest{
    string name_person = 99;
    string after = 1;
    string before = 2;
    int32 first = 3;
    int32 last = 4;
    bool reverse = 5;
    //查询时间段的开始时间
    google.protobuf.Timestamp start_time = 6;
    //截至时间
    google.protobuf.Timestamp end_time = 7;
}
// A event resource.
message Personevent {
    // Resource name of the personevent. It must have the format of "persons/*/events/*".
    // For example: "persons/personid1/events/eventid2".
    // The name is ignored when creating an event.
    string name = 1;

    string title = 6; //事件标题
    string content = 7 ; //事件内容

    google.protobuf.Timestamp happen_time = 9; //事件时间 The creation timestamp of an entity.

    //订单id
    string orderId = 10;

    string name_guoistation = 100; //国爱驿站资源名称
}

// Response to ListPersonevents call.
message ListPersoneventsResponse {
    // *Output-only* If set, returns a [google.rpc.Status][google.rpc.Status] message that
    // specifies the error for the operation.
    google.rpc.Status error = 999;

    // Personevents in the bookstore.
    repeated Personevent personevents = 1;
}

// Request message for CreatePersonevent method.
message CreatePersoneventRequest {
    // Resource name of the parent resource where to create the event.
    // For example: "persons/personid1".
    string parent = 1;

    // The event resource to create.
    Personevent personevent = 2;
}

// Request message for GetPersonevent method.
message GetPersoneventRequest {
    // Resource name of a personevent. For example: "persons/personid1/events/eventid2".
    string name = 1;
}

// Request message for DeletePersonevent method.
message DeletePersoneventRequest {
    // Resource name of a personevent. For example: "persons/personid1/events/eventid2".
    string name = 1;
}
